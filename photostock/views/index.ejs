<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="style.css">
    <title>Photostock</title>
</head>

<body>
    <header class="header">
        <ul>
            <li class="name"><a href="/">Photostock</a></li>

            <li class="upload">
                <form enctype="multipart/form-data" method="post" onsubmit="checkFile(event)">
                    <p style="width: 250px;">
                        <label class="label">
                            <span class="title">Add</span>
                            <input type="file" name="filedata" id="uploadFile">
                        </label>
                        <input type="submit" value="Send file" class="submit-button">
                    </p>
                </form>

                <div style="margin-top: 15px;" id="textDiv"></div>
            </li>
        </ul>
    </header>

    <div class="content">
        <section class="centered">
            <div class="projects">
                <% for (var i = 0; i < title.length; i++) {%>
                <div class="brick">
                    <img src="images/<%= title[i] %>">
                </div>
                <%} %>
            </div>
        </section>
    </div>

    <script>
        var uploadFile = document.getElementById("uploadFile"); // input[type="file"]
        var fileNf = document.getElementById("textDiv"); // "File not found/file name div"
        var cross = document.createElement("button"); // Создание кнопки "крестика"

        function loadCookie() {
            fileNf.innerHTML = getCookie('fileNf') ? getCookie('fileNf') : '';

            if (getCookie('cross')) {
                cross.className = "crossBut";
                cross.innerHTML = "✕";
                fileNf.append(cross);

                clickCross();
            }
        }

        loadCookie();

        function checkFile(e) { // Обработка формы при нажатии Send file
            deleteCookie("fileNf");
            deleteCookie("cross");

            if (uploadFile.files.length == 0) {
                e.preventDefault();

                fileNf.innerHTML = "File not found.";

                setTimeout(function () {
                    fileNf.innerHTML = "";
                }, 1500);
            }
        }

        uploadFile.addEventListener('change', function () {
            var filename = uploadFile.value.replace(/^.*\\/, "");
            fileNf.innerHTML = filename;
            setCookie('fileNf', filename);
        });

        function addCross() {
            uploadFile.addEventListener("change", function () { // Обработка добавления файла
                if (uploadFile.files.length == 1) {
                    cross.innerHTML = "✕";
                    cross.className = "crossBut";
                    fileNf.append(cross);
                    setCookie('cross', cross);
                }

                else {
                    cross.innerHTML = "";
                }
            })
        }

        function clickCross() {
            cross.addEventListener("click", function () { // Обработка нажатия на крестик
                uploadFile.value = "";
                fileNf.innerHTML = "";
                deleteCookie("fileNf");
                deleteCookie("cross");
            })
        }

        addCross();
        clickCross();

        // Cookie

        function getCookie(name) {
            var matches = document.cookie.match(new RegExp(
                "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
            ));
            return matches ? decodeURIComponent(matches[1]) : undefined;
        }

        function setCookie(name, value, options) {
            options = options || {};

            var expires = options.expires;

            if (typeof expires == "number" && expires) {
                var d = new Date();
                d.setTime(d.getTime() + expires * 1000);
                expires = options.expires = d;
            }
            if (expires && expires.toUTCString) {
                options.expires = expires.toUTCString();
            }

            value = encodeURIComponent(value);

            var updatedCookie = name + "=" + value;

            for (var propName in options) {
                updatedCookie += "; " + propName;
                var propValue = options[propName];
                if (propValue !== true) {
                    updatedCookie += "=" + propValue;
                }
            }

            document.cookie = updatedCookie;
        }

        function deleteCookie(name) {
            setCookie(name, "", {
                'max-age': -1
            })
        }
    </script>
</body>

</html>